import matplotlib.pyplot as plt
import numpy as np
import math
from scipy.stats import linregress

# Датасет
cal = []
rate = []
data = open('cereal.csv')
for line in data:
    if float(line.split(',', maxsplit=-1)[3]) not in cal:
        cal.append(float(line.split(',', maxsplit=-1)[3]))
        rate.append(float(line.split(',', maxsplit=-1)[15]))
cal = np.array(cal)
cal = np.reshape(cal, (1,-1))
rate = np.array(rate)
rate = np.reshape(rate, (1,-1))
plt.scatter(cal, rate)
mx = np.amax(cal)


t = input("Введите l,e,p: ")
if t == "l":
    slope, intercept, r_value, p_value, std_err = linregress(cal,rate)
    print(slope,intercept,r_value,p_value,std_err)
    grx = [0, mx]
    gr = [intercept, mx*slope+intercept]
    plt.plot(grx, gr,color="pink")
    plt.show()

if t == "e":
    x = np.reshape(cal, -1)
    y = np.reshape(rate, -1)
    reg = np.polyfit(x, np.log(y), 1)
    x = np.arange(0,int(mx),1)
    y = np.zeros(int(mx))
    for i in range(len(x)):
        y[i] = math.exp(reg[1])*math.exp(reg[0]*x[i])
    plt.plot(x, y, color="pink")
    plt.show()

if t == "p":
    cal1 = np.reshape(cal, -1)
    rate1 = np.reshape(rate, -1)
    d = int(input("Введите степень многочлена: "))
    reg = np.polyfit(cal1, rate1, deg=d)
    print(reg)
    x = np.arange(0,int(mx),1)
    y = np.zeros(int(mx))
    for i in range(len(x)):
        for dg in range(len(reg)):
            y[i] += reg[dg]*(x[i]**dg)
    plt.plot(x,y,color="pink")
    plt.show()
